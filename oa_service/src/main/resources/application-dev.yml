server:
  port: 8080

mydefine:
  linux:
    db-url: 192.168.0.102

spring:
  datasource:
    #数据源基本配置
    url: jdbc:mysql://127.0.0.1:3306/oaframe?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: gaoyipeng
    driver-class-name: com.mysql.jdbc.Driver

    #数据源其他配置
    type: com.alibaba.druid.pool.DruidDataSource
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500

  redis:
    host: 192.168.254.129
    port: 6379
    database: 0
    jedis:
      pool:
        max-active: 8 # 连接池最大连接数（使用负值表示没有限制）
        max-idle: 8  # 连接池中的最大空闲连接
        min-idle: 1  # 连接池中的最小空闲连接
        max-wait: -1 # 连接池最大阻塞等待时间（使用负值表示没有限制）
    timeout: 1000 # 连接超时时间（毫秒） 
  rabbitmq:
    host: 192.168.254.129
    port: 5672
    username: guest
    password: guest
#    virtual-host: /